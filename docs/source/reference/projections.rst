
.. (comment): DO NOT EDIT this file.
.. It is auto-generated by running : cartopy/docs/make_projection.py
.. Please adjust by making changes there.
.. It is included in the repository only to aid detection of changes.

.. _cartopy_projections:

PlateCarree
-----------

.. autoclass:: cartopy.crs.PlateCarree

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    nplots = 2

    fig = plt.figure(figsize=(6, 6))

    for i in range(0, nplots):
        central_longitude = 0 if i == 0 else 180
        ax = fig.add_subplot(
            nplots, 1, i+1,
            projection=ccrs.PlateCarree(central_longitude=central_longitude))
        ax.coastlines(resolution='110m')
        ax.gridlines()


AlbersEqualArea
---------------

.. autoclass:: cartopy.crs.AlbersEqualArea

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(5.1299, 3))
    ax = plt.axes(projection=ccrs.AlbersEqualArea())
    ax.coastlines(resolution='110m')
    ax.gridlines()


AzimuthalEquidistant
--------------------

.. autoclass:: cartopy.crs.AzimuthalEquidistant

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.AzimuthalEquidistant(
                            central_latitude=90))
    ax.coastlines(resolution='110m')
    ax.gridlines()


EquidistantConic
----------------

.. autoclass:: cartopy.crs.EquidistantConic

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(4.9603, 3))
    ax = plt.axes(projection=ccrs.EquidistantConic())
    ax.coastlines(resolution='110m')
    ax.gridlines()


LambertConformal
----------------

.. autoclass:: cartopy.crs.LambertConformal

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(4.2897, 3))
    ax = plt.axes(projection=ccrs.LambertConformal())
    ax.coastlines(resolution='110m')
    ax.gridlines()


LambertCylindrical
------------------

.. autoclass:: cartopy.crs.LambertCylindrical

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(9.4248, 3))
    ax = plt.axes(projection=ccrs.LambertCylindrical())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Mercator
--------

.. autoclass:: cartopy.crs.Mercator

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3.5091, 3))
    ax = plt.axes(projection=ccrs.Mercator())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Miller
------

.. autoclass:: cartopy.crs.Miller

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(4.0917, 3))
    ax = plt.axes(projection=ccrs.Miller())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Mollweide
---------

.. autoclass:: cartopy.crs.Mollweide

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.Mollweide())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Orthographic
------------

.. autoclass:: cartopy.crs.Orthographic

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.Orthographic())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Robinson
--------

.. autoclass:: cartopy.crs.Robinson

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(5.915, 3))
    ax = plt.axes(projection=ccrs.Robinson())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Sinusoidal
----------

.. autoclass:: cartopy.crs.Sinusoidal

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6.0101, 3))
    ax = plt.axes(projection=ccrs.Sinusoidal())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Stereographic
-------------

.. autoclass:: cartopy.crs.Stereographic

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.Stereographic())
    ax.coastlines(resolution='110m')
    ax.gridlines()


TransverseMercator
------------------

.. autoclass:: cartopy.crs.TransverseMercator

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.TransverseMercator(
                            approx=False))
    ax.coastlines(resolution='110m')
    ax.gridlines()


UTM
---

.. autoclass:: cartopy.crs.UTM

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    nplots = 60

    fig = plt.figure(figsize=(10, 3))

    for i in range(0, nplots):
        ax = fig.add_subplot(1, nplots, i+1,
                             projection=ccrs.UTM(zone=i+1,
                                                 southern_hemisphere=True))
        ax.coastlines(resolution='110m')
        ax.gridlines()


InterruptedGoodeHomolosine
--------------------------

.. autoclass:: cartopy.crs.InterruptedGoodeHomolosine

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    fig = plt.figure(figsize=(6.9228, 6))

    ax1 = fig.add_subplot(2, 1, 1,
                          projection=ccrs.InterruptedGoodeHomolosine(
                              emphasis='land'))
    ax1.coastlines(resolution='110m')
    ax1.gridlines()

    ax2 = fig.add_subplot(2, 1, 2,
                          projection=ccrs.InterruptedGoodeHomolosine(
                              central_longitude=-160, emphasis='ocean'))
    ax2.coastlines(resolution='110m')
    ax2.gridlines()


RotatedPole
-----------

.. autoclass:: cartopy.crs.RotatedPole

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.RotatedPole(
                            pole_latitude=37.5,
                            pole_longitude=177.5))
    ax.coastlines(resolution='110m')
    ax.gridlines()


OSGB
----

.. autoclass:: cartopy.crs.OSGB

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(1.6154, 3))
    ax = plt.axes(projection=ccrs.OSGB(
                            approx=False))
    ax.coastlines(resolution='50m')
    ax.gridlines()


EuroPP
------

.. autoclass:: cartopy.crs.EuroPP

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(2.6154, 3))
    ax = plt.axes(projection=ccrs.EuroPP())
    ax.coastlines(resolution='50m')
    ax.gridlines()


Geostationary
-------------

.. autoclass:: cartopy.crs.Geostationary

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.Geostationary())
    ax.coastlines(resolution='110m')
    ax.gridlines()


NearsidePerspective
-------------------

.. autoclass:: cartopy.crs.NearsidePerspective

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.NearsidePerspective(
                            central_latitude=50.72,
                            central_longitude=-3.53,
                            satellite_height=10000000.0))
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertI
-------

.. autoclass:: cartopy.crs.EckertI

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertI())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertII
--------

.. autoclass:: cartopy.crs.EckertII

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertII())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertIII
---------

.. autoclass:: cartopy.crs.EckertIII

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertIII())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertIV
--------

.. autoclass:: cartopy.crs.EckertIV

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertIV())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertV
-------

.. autoclass:: cartopy.crs.EckertV

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertV())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EckertVI
--------

.. autoclass:: cartopy.crs.EckertVI

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6, 3))
    ax = plt.axes(projection=ccrs.EckertVI())
    ax.coastlines(resolution='110m')
    ax.gridlines()


EqualEarth
----------

.. autoclass:: cartopy.crs.EqualEarth

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(6.1637, 3))
    ax = plt.axes(projection=ccrs.EqualEarth())
    ax.coastlines(resolution='110m')
    ax.gridlines()


Gnomonic
--------

.. autoclass:: cartopy.crs.Gnomonic

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.Gnomonic())
    ax.coastlines(resolution='110m')
    ax.gridlines()


LambertAzimuthalEqualArea
-------------------------

.. autoclass:: cartopy.crs.LambertAzimuthalEqualArea

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3.0066, 3))
    ax = plt.axes(projection=ccrs.LambertAzimuthalEqualArea())
    ax.coastlines(resolution='110m')
    ax.gridlines()


NorthPolarStereo
----------------

.. autoclass:: cartopy.crs.NorthPolarStereo

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.NorthPolarStereo())
    ax.coastlines(resolution='110m')
    ax.gridlines()


OSNI
----

.. autoclass:: cartopy.crs.OSNI

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(2.4323, 3))
    ax = plt.axes(projection=ccrs.OSNI(
                            approx=False))
    ax.coastlines(resolution='10m')
    ax.gridlines()


SouthPolarStereo
----------------

.. autoclass:: cartopy.crs.SouthPolarStereo

.. plot::

    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs

    plt.figure(figsize=(3, 3))
    ax = plt.axes(projection=ccrs.SouthPolarStereo())
    ax.coastlines(resolution='110m')
    ax.gridlines()


