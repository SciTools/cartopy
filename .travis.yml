language: python

env:
    matrix:
        # These ancient versions are linked to an old libgfortran, but that version
        # isn't pinned in the package metadata
        - PYTHON_VERSION=2.7
          PACKAGES="numpy=1.10.0 matplotlib=1.5.1 nose proj4=4.9.1 scipy=0.16.0 libgfortran=1 mock"
        - PYTHON_VERSION=3.5
          PACKAGES="numpy=1.10.0 matplotlib=1.5.1 nose proj4=4.9.1 scipy=0.16.0 libgfortran=1"
          PYTHONHASHSEED=0  # So pytest-xdist works.
        # New FreeType causes changes in text output.
        - NAME="Latest everything."
          PYTHON_VERSION=3.6
          PACKAGES="numpy matplotlib freetype<2.8 proj4 scipy"
        - NAME="Latest everything (py2k)."
          PYTHON_VERSION=2
          PACKAGES="numpy matplotlib freetype<2.8 proj4 scipy mock"


sudo: false

git:
  # Because we check the history of every file, we need to have
  # a deep clone of the repo.
  depth: 10000

install:
  # Install miniconda
  # -----------------
  - if [[ "$PYTHON_VERSION" == 2* ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls yes
  - ENV_NAME="test-environment"
  - conda create -n $ENV_NAME python=$PYTHON_VERSION
  - source activate $ENV_NAME

  # Customise the testing environment
  # ---------------------------------
  - conda config --add channels conda-forge
  - PACKAGES="$PACKAGES cython pillow pytest pytest-xdist filelock pep8 pyshp shapely six requests pyepsg owslib"
  - conda install --quiet $PACKAGES

  # Conda debug
  # -----------
  - conda list -n $ENV_NAME
  - conda list -n $ENV_NAME --explicit
  - conda info -a

  - MPL_CONFIG_DIR=~/.config/matplotlib
  - mkdir -p $MPL_CONFIG_DIR
  - echo "backend" ":" "agg" > $MPL_CONFIG_DIR/matplotlibrc

  # Install cartopy
  # ---------------
  - pip install --no-deps .
  - python -c "import cartopy; print('Version ', cartopy.__version__)" && python setup.py version

script:
  - mkdir ../test_folder
  - cd ../test_folder

  # Check that the downloader tool at least knows where to get the data from (but don't actually download it)
  - python $TRAVIS_BUILD_DIR/tools/feature_download.py gshhs physical --dry-run

  - if [[ "$NAME" == "Latest everything"* ]]; then
      CARTOPY_GIT_DIR=$TRAVIS_BUILD_DIR pytest -n 4 --doctest-modules --pyargs cartopy;
    else
      CARTOPY_GIT_DIR=$TRAVIS_BUILD_DIR pytest -n 4 --pyargs cartopy;
    fi

after_failure:
  - source activate $ENV_NAME
  - python -c "from __future__ import print_function; import cartopy.tests.mpl; print(cartopy.tests.mpl.failed_images_html())"
